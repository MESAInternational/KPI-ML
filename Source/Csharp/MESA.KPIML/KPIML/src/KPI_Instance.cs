///////////////////////////////////////////////////////////
//  KPI_Instance.cs
//  Implementation of the Class KPI_Instance
//  Generated by Enterprise Architect
//  Created on:      22-Oct-2015 10:06:06 PM
//  Original author: dnbrandl
//  Code generator/author: kjsmiley
//  Last revised 2016-08-05
//  The KPI Markup Language (KPI-ML) is used courtesy of MESA International. 
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;

namespace MESA.KPIML
{
    /// <summary>
    /// MESA KPI Instance class. Referenceable by ID.
    /// See http://mesa.org/en/kpiml.asp and https://github.com/MESAInternational/KPI-ML/ for more information.
    /// </summary>
    public class KPI_Instance
    {
        /// <summary>
        /// Unique identifier for this Instance of the KPI
        /// </summary>
        /// <remarks>
        /// <i>(if a numeric value is desired, use LONG instead of ULONG </i>
        /// <i>to maximize compatibility across Java and C#. for a string,</i>
        /// <i>consider using string equivalent of a C# unique type such as GUID)</i>
        /// </remarks>
        public string ID = "";

        /// <summary>
        /// List of Audiences for this KPI Instance
        /// <i>Optional.</i>
        /// </summary>
        public List<string> Audience = new List<string>();

        /// <summary>
        /// List of texts describing this KPI Instance.
        /// <i>Optional.</i>
        /// </summary>
        public List<string> Description = new List<string>();

        /// <summary>
        /// List of Effect Model texts describing this KPI Instance
        /// <i>Optional.</i>
        /// <i>See ISO 22400 standard for list of allowable MIME types.</i>
        /// </summary>
        public List<string> EffectModel = new List<string>();

        /// <summary>
        /// Text describing the formula used to calculate this KPI Instance
        /// </summary>
        public string Formula = "";

        /// <summary>
        /// Name of this KPI Instance
        /// </summary>
        public string Name = "";

        /// <summary>
        /// List of Notes for this KPI Instance
        /// <i>Optional.</i>
        /// </summary>
        public List<string> Notes = new List<string>();

        /// <summary>
        /// List of texts describing the Production Methodology associated with this KPI
        /// Instance.
        /// Allowable values include:
        ///  Batch
        ///  Continuous
        ///  Discrete
        ///  Other (provide other Value)
        /// </summary>
        /// <i>Optional.</i>
        /// <value>KpiMlEnums.ProductionMethodologies</value>
        public List<string> ProductionMethodology = new List<string>();

        /// <summary>
        /// Lit of texts describing the Scope for this KPI Instance
        /// <i>Optional.</i>
        /// </summary>
        public List<string> Scope = new List<string>();

        /// <summary>
        /// List of texts describing the Timing for this KPI Instance
        /// <i>Optional.</i>
        /// </summary>
        public List<string> Timing = new List<string>();

        /// <summary>
        /// Desired Trend direction for this KPI Instance
        /// Allowable values include:
        ///  higher-is-better
        ///  lower-is-better
        ///  other (provide other Value)
        /// <i>Optional.</i>
        /// </summary>
        /// <value>KpiMlEnums.TrendValues</value>
        public string Trend = "";

        /// <summary>
        /// Text describing the Unit of Measure for this KPI Instance
        /// <i>Unconstrained, but SI units are preferred.</i>
        /// <i>Optional.</i>
        /// </summary>
        /// <remarks>Question for MESA XML Committee: how should multiple possible units be handled? e.g. KUSD vs MUSD, g vs kg</remarks>
        public string UnitOfMeasure = "";

        /// <summary>
        /// This KPI Instance may include 0+ KPI Instance Property
        /// <i>Optional.</i>
        /// </summary>
        public List<KPI_Instance_Property> m_KPI_Instance_Property = new List<KPI_Instance_Property>();

        /// <summary>
        /// KPI Instance Range
        /// <i>Optional.</i>
        /// </summary>
        public List<KPI_Range> m_KPI_Range = new List<KPI_Range>();

        /// <summary>
        /// KPI Resource Reference
        /// <i>Optional.</i>
        /// </summary>
        public List<Resource_Reference> m_Resource_Reference = new List<Resource_Reference>();

        /// <summary>
        /// KPI Instance Time Range
        /// <i>Optional.</i>
        /// </summary>
        public List<KPI_Time_Range> m_KPI_Instance_Time_Range = new List<KPI_Time_Range>();

        /// <summary>
        /// These ID(s) are for KPI Instance(s) used by this KPI Instance for its calculations.
        /// <i>Optional.</i>
        /// </summary>
        /// <remarks>THIS IS DIFFERENT FROM THE v1.0 .EAP which calls for entire definitions, not just IDs.</remarks>
        public List<string> used_in_calculation = new List<string>();
        //public List<KPI_Instance> used_in_calculation;

        /// <summary>
        /// KPI Definition ID on which this Instance ID is based
        /// <i>Optional.</i>
        /// </summary>
        /// <remarks>(note: not auto-generated, need to check schema)</remarks>
        public string KPIDefinitionID = "";

        /// <summary>
        /// Constructor (auto-generated)
        /// </summary>
        public KPI_Instance()
        {

        }

        /// <summary>
        /// Destructor (auto-generated)
        /// </summary>
        ~KPI_Instance()
        {

        }

    }//end KPI_Instance
}